<<<<<<< HEAD
colnames(d)
ggplot(as.data.frame(d),
aes(y = Freq, axis1 = pronouns, axis2 = age)) +
geom_alluvium(aes(fill = user_type), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
# scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
ggplot(as.data.frame(d),
aes(y = Freq, axis1 = pronouns, axis2 = age)) +
geom_alluvium(aes(fill = user_type), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
# scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05)) +
#scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
ggplot(as.data.frame(d),
aes(y = Freq, axis1 = bh21_participant, axis2 = age, axis3=profession)) +
geom_alluvium(aes(fill = pronouns), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
# scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05)) +
#scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
ggplot(as.data.frame(d),
aes(y = Freq, axis1 = bh21_participant, axis2 = age, axis3=profession_summary)) +
geom_alluvium(aes(fill = pronouns), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
# scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05)) +
#scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
ggplot(as.data.frame(d),
aes(y = Freq, axis1 = bh21_participant, axis2 = age, axis3 =work_experience ,axis4=profession_summary)) +
geom_alluvium(aes(fill = pronouns), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
# scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05)) +
#scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
# save plot
png('/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/sankeyplot_participants.png',
width = 3000, height = 2000, res = 200)
sp
dev.off()
# save plot
png('/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/sankeyplot_participants.png',
width = 3000, height = 1500, res = 300)
sp
dev.off()
# save plot
png('/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/sankeyplot_participants.png',
width = 3000, height = 2000, res = 300)
sp
dev.off()
subset(d, gender )
d
subset(d, pronouns =="She/her" )
table(subset(d, pronouns =="She/her")$age)
12+8
sum(table(subset(d, pronouns =="She/her")$age))
# Load data
d = fread("/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/responses_survey_profile_participants.tsv")
d$work_experience = factor(d$work_experience , levels = c("< 1",   "1-5",     "6-10",  "11-15",">15" ))
df <- d %>%
make_long(bh21_participant, continent, pronouns, age,work_experience, profession_summary, user_type)
sp = ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
sp
# save plot
png('/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/sankeyplot_participants.png',
width = 3500, height = 2000, res = 300)
sp
dev.off()
# save plot
png('/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/sankeyplot_participants.png',
width = 4000, height = 2000, res = 300)
sp
dev.off()
# Load data
d = fread("/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/responses_survey_profile_participants.tsv")
# put data in sankey format
d$work_experience = factor(d$work_experience , levels = c("< 1",   "1-5",     "6-10",  "11-15",">15" ))
df <- d %>%
make_long(bh21_participant, continent, pronouns, age,work_experience, profession_summary, user_type)
# plot data
sp = ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
sp
table(subset(d, profession_summary =="Researcher")
)
subset(d, profession_summary =="Researcher")
df_she <- subset(d, pronouns=="She/her") %>%
make_long(bh21_participant, continent,  age,work_experience, profession_summary, user_type)
# plot data
sp_she = ggplot(df_she, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
sp_she
df_him <- subset(d, pronouns=="He/him") %>%
make_long(bh21_participant, continent,  age,work_experience, profession_summary, user_type)
# plot data
sp_him = ggplot(df_him, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
sp_him
=======
xlab("Sex specification in samples found in the study")+
theme_minimal()+
#facet_grid(repository~., scales= "free_y")+
#scale_color_manual(values = cbp1)+
scale_color_brewer(palette = "Set2")+
theme(axis.text.x = element_text(size = 10),
legend.position="top",
legend.box = "horizontal",
strip.text = element_text(size = 16, face = "bold"))+
guides(color=guide_legend(nrow=1,byrow=TRUE, title = "Study classification"))
dbgap3 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"),
aes(x= year, color = label, group =label ))+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage studies")+
xlab("Year")+
theme_minimal()+
#facet_grid(repository~., scales= "free_y")+
#scale_color_manual(values = cbp1)+
scale_color_brewer(palette = "Set2")+
theme(axis.text.x = element_text(size = 10),
legend.position="top",
legend.box = "horizontal",
strip.text = element_text(size = 16, face = "bold"))+
guides(color=guide_legend(nrow=1,byrow=TRUE, title = "Study classification"))
ega3 = ggplot(subset(ega_dbgap_percent, repository == "EGA"),
aes(x= year, color = label, group =label ))+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage studies")+
xlab("Year")+
theme_minimal()+
#facet_grid(repository~., scales= "free_y")+
#scale_color_manual(values = cbp1)+
scale_color_brewer(palette = "Set2")+
theme(axis.text.x = element_text(size = 10),
legend.position="top",
legend.box = "horizontal",
strip.text = element_text(size = 16, face = "bold"))+
guides(color=guide_legend(nrow=1,byrow=TRUE, title = "Study classification"))
pp = plot_grid(dbgap1, dbgap2,ega1, ega2,
labels = c('A', 'B', "C", "D", "E", "F"),
ncol = 1, rel_heights = c(0.25,0.5, 0.25, 0.5),
label_x = "Year")
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
library(patchwork) # To display 2 charts together
#library(hrbrthemes)
>>>>>>> parent of 547c59c... updated code and figures
library(cowplot)
plot_grid(sp_she, sp_him, ncol = 1, align = "v",labels = c("She/her", "He/him"))
png('/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/sankeyplot_participants_bygender.png',
width = 4000, height = 4000, res = 300)
plot_grid(sp_she, sp_him, ncol = 1, align = "v",labels = c("She/her", "He/him"))
dev.off()
subset(d, profession_summary =="Researcher")
subset(d, profession_summary =="Researcher" & user_type == "Developer")
table(subset(d, profession_summary =="Researcher" )$user_tpye)
subset(d, profession_summary =="Researcher" )$user_tpye
subset(d, profession_summary =="Researcher")
subset(d, profession_summary =="Researcher")$user_type
table(subset(d, profession_summary =="Researcher")$user_type)
# Load data
<<<<<<< HEAD
d = fread("/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/responses_survey_profile_participants.tsv")
# put data in sankey format
d$work_experience = factor(d$work_experience , levels = c("< 1",   "1-5",     "6-10",  "11-15",">15" ))
df <- d %>%
make_long(question5,work_experience, question3)
# plot data
sp = ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
sp
# put data in sankey format
d$work_experience = factor(d$work_experience , levels = c("< 1",   "1-5",     "6-10",  "11-15",">15" ))
df <- d %>%
make_long(work_experience, question3)
# plot data
sp_q3 = ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
sp_q3
table(df[, c("work_experience", "question3")])
table(d[, c("work_experience", "question3")])
ggplot(d, aes(x = work_experience, y = question3, fill = question3))+
geom_bar(stat="count")
ggplot(d, aes(x = work_experience, fill = question3))+
geom_bar(stat="count")
ggplot(d, aes(x = work_experience, fill = question3))+
geom_bar(stat="count", position ="dodge")
ggplot(d, aes(x = work_experience, fill = question5))+
geom_bar(stat="count", position ="dodge")
library(data.table)
library(ggplot2)
library(ggsankey)
library(dplyr)
# Load data
d = fread("/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35_2/qualitative_analysis/responses_survey_profile_participants.tsv")
# put data in sankey format
d$work_experience = factor(d$work_experience , levels = c("< 1",   "1-5",     "6-10",  "11-15",">15" ))
# put data in sankey format
d$work_experience = factor(d$work_experience , levels = c("< 1",   "1-5",     "6-10",  "11-15",">15" ))
ggplot(d, aes(x = work_experience, fill = question3))+
geom_bar(stat="count", position ="dodge")
d
dsum = d %>% group_by(question3)%>% summarise(n = n())
dsum
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme(legend.position="none")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = ypos, label = group), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = n, label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(15, 45, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 45, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
dsum
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 145, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 90, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 30, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 25, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 40, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 35, 60), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(60, 35, 15), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(70, 35, 15), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(50, 35, 15), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(55, 35, 15), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
21+26+19
dsum = d %>% group_by(question3)%>% summarise(n = n()/66 * 100)
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(55, 35, 15), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
dsum = d %>% group_by(question3)%>% summarise(n = n())
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(55, 35, 15), label =n), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(55, 35, 15), label =n), color = "white", size=6)
pc = ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(55, 35, 15), label =n), color = "white", size=6)
ggplot(d, aes(x = work_experience, fill = question3))+
geom_bar(stat="count", position ="dodge")
ggplot(d, aes(x = work_experience, fill = question3))+
geom_bar(stat="count", position ="dodge")+
theme_minimal()
dsum1 = d %>% group_by(question3, work_experience)%>% summarise(n = n())
ggplot(dsum1, aes(x = work_experience, color = question3, y = n))+
geom_point()+
theme_minimal()
ggplot(dsum1, aes(x = work_experience, color = question3, y = n))+
geom_point()+
geom_line()+
theme_minimal()
ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=work_experience))+
geom_point()+
geom_line()+
theme_minimal()
ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point()+
geom_line()+
theme_minimal()
pp = ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point()+
geom_line()+
theme_minimal()+
xlab("Work experience (years)")+
ylab("# answers")
pp
library(cowplot)
plot_grid(pc, pp, labels = c('A', 'B'),
ncol = 2, rel_wid = c(0.25,1))
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1
ncol = 2, rel_widths =  c(0.25,1))
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.25,1))
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.55,1))
png('../figures/figureS9_B.png',
width = 1500, height = 750, res = 150)
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.55,1))
setwd("/media/victoria/VICTORIA_EXTERNAL_DISK/BioHackathon2021/biohackathon-project-35/code_figures")
png('../figures/figureS9_B.png',
width = 1500, height = 750, res = 150)
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.55,1))
dev.off()
png('../figures/figureS9_B.png',
width = 1000, height = 750, res = 150)
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.55,1))
dev.off()
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.55,1))
dev.off()
pp = ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point(size = 4)+
geom_line()+
theme_minimal()+
xlab("Work experience (years)")+
ylab("# answers")
pp
pp = ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point(size = 4)+
geom_line(size = 2)+
theme_minimal()+
xlab("Work experience (years)")+
ylab("# answers")
pp = ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point(size = 4)+
geom_line(width=2)+
theme_minimal()+
xlab("Work experience (years)")+
ylab("# answers")
pp = ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point(size = 4)+
geom_line(linewidth=2)+
theme_minimal()+
xlab("Work experience (years)")+
ylab("# answers")
pp
pp = ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point(size = 4)+
geom_line(linewidth=1)+
theme_minimal()+
xlab("Work experience (years)")+
ylab("# answers")
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.55,1))
dev.off()
png('../figures/figureS9_B.png',
width = 1200, height = 500, res = 150)
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.55,1))
dev.off()
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1))
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(pc, pp, labels = c('A', 'B'),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1))
dev.off()
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(pc, pp, labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1))
dev.off()
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(pc+theme(legend.position = "none"), pp, labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1))
dev.off()
pp = pp+theme(legend.position = "top")
leg = get_legend(pp)
legend = get_legend(pp)
plot_grid(legend,
plot_grid(pc+theme(legend.position = "none"),
pp+theme(legend.position = "none"), labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1)),
ncol = 1, rel_heights = c(0.01,1))
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(legend,
plot_grid(pc+theme(legend.position = "none"),
pp+theme(legend.position = "none"), labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1)),
ncol = 1, rel_heights = c(0.01,1))
dev.off()
plot_grid(legend,
plot_grid(pc+theme(legend.position = "none"),
pp+theme(legend.position = "none"), labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1)),
ncol = 1, rel_heights = c(0.1,1))
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(legend,
plot_grid(pc+theme(legend.position = "none"),
pp+theme(legend.position = "none"), labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1)),
ncol = 1, rel_heights = c(0.1,1))
dev.off()
pp = pc+theme(legend.position = "top")
pp = ggplot(dsum1, aes(x = work_experience, color = question3, y = n, group=question3))+
geom_point(size = 4)+
geom_line(linewidth=1)+
theme_minimal()+
xlab("Work experience (years)")+
ylab("# answers")
pc = pc+theme(legend.position = "top")
legend = get_legend(pc)
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(legend,
plot_grid(pc+theme(legend.position = "none"),
pp+theme(legend.position = "none"), labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1)),
ncol = 1, rel_heights = c(0.1,1))
dev.off()
pc = ggplot(dsum, aes(x="", y=n, fill=question3)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = c(55, 35, 15), label =n), color = "white", size=6) +
ggtitle("Total number of answers")
pc
pc = pc+theme(legend.position = "top")
legend = get_legend(pc)
library(cowplot)
png('../figures/figureS9_B.png',
width = 1500, height = 500, res = 150)
plot_grid(legend,
plot_grid(pc+theme(legend.position = "none"),
pp+theme(legend.position = "none"), labels = c('', ''),nrow = 1,
ncol = 2, rel_widths =  c(0.45,1)),
ncol = 1, rel_heights = c(0.1,1))
=======
ega = fread("../ega/all_EGA_samples.txt")
#ega$total_all = length(unique(ega$ega_stable_id))
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "dataset_id"
ega_m = melt(ega, id.vars = c("dataset_id", "repository", "date_study", "year", "total"))
ega_m$year[ega_m$year=="1980"] = "NA"
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "dataset_id", "filename", "date",'year', "total"))
dbgap_m$repository = "dbGaP"
dbgap_m$year[dbgap_m$year==""] = "NA"
# bind datasets
ega_dbgap = rbindlist(list(ega_m, dbgap_m), use.names = T, fill = T)
#total samples per year
ega_dbgap = ega_dbgap %>% group_by(repository, year) %>% mutate(total_year = sum(value))
################
# sample level #
################
ega1 = ggplot(subset(ega_dbgap_percent, repository == "EGA"),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year), color = "#ed553b")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
ega2 = ggplot(subset(ega_dbgap_percent, repository =="EGA"),
aes(x=year,  color=variable, group=variable))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage of samples")+
xlab("Year")+
theme_minimal()+
scale_y_continuous(labels=scales::percent)+#,
#sec.axis = sec_axis(~.*0.01, name="Second Axis")) +
facet_grid(repository~.)+
scale_color_manual(values = c("#20639b", "#3caea3","#f6d55c"),
labels = c("Male", "Female", "Unknown"),
name ="")+
#scale_x_discrete(labels= c("M", "F", "U"))+
theme(legend.position = "top",
axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
dbgap1 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year), color = "#ed553b")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
dbgap2 = ggplot(subset(ega_dbgap_percent, repository =="dbGaP"),
aes(x=year,  color=variable, group=variable))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage of samples")+
xlab("Year")+
theme_minimal()+
scale_y_continuous(labels=scales::percent)+#,
ylim(0,1)+
#sec.axis = sec_axis(~.*0.01, name="Second Axis")) +
facet_grid(repository~.)+
scale_color_manual(values = c("#20639b", "#3caea3","#f6d55c"),
labels = c("Male", "Female", "Unknown"),
name ="")+
#scale_x_discrete(labels= c("M", "F", "U"))+
theme(legend.position = "top",
axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
# Load data
ega = fread("../ega/all_EGA_samples.txt")
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "dataset_id"
ega = ega %>% group_by(year) %>%
mutate(total_all = length(unique(dataset_id)))
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap$repository = "dbGaP"
dbgap$year[dbgap$year==""] = "NA"
#dbgap = subset(dbgap, year > 2017)
dbgap = dbgap %>% group_by(year) %>%
mutate(total_all = length(unique(dataset_id)))
dbgap$phe = substr(dbgap$filename, 8,19)
ega_dbgap = rbind(ega,dbgap[colnames(ega[,-6])])
################
# study level  #
################
unknown_only = subset(ega_dbgap, male == 0 & female == 0)
unknown_only$label = "U"
female_only = subset(subset(ega_dbgap, male == 0 & unknown == 0))
female_only$label = 'F'
male_only = subset(ega_dbgap, female == 0 & unknown == 0)
male_only$label = 'M'
female_and_male = subset(ega_dbgap, female != 0 & male != 0 & unknown == 0)
female_and_male$label = 'F&M'
female_and_unknown = subset(ega_dbgap, female != 0 & male == 0 & unknown != 0)
female_and_unknown$label = 'F&U'
male_and_unknown = subset(ega_dbgap, female == 0 & male != 0 & unknown != 0)
male_and_unknown$label = 'M&U'
female_and_male_and_unknown = subset(ega_dbgap, female != 0 & male != 0 & unknown != 0)
female_and_male_and_unknown$label = 'F&M&U'
r = rbind(unknown_only, female_only, male_only, female_and_male, female_and_unknown, male_and_unknown, female_and_male_and_unknown)
r $ c = 1
#write.table(r, 'ega_dbgap_studies_classification.txt', sep = "\t")
# percent
ega_dbgap_percent = unique(r %>% group_by(label, repository,year) %>%
summarise(value_percent = sum(c) / total_all))
f = arrange(ega_dbgap_percent, desc(value_percent))$label
ega_dbgap_percent$label = factor(ega_dbgap_percent$label, levels = c("F&M", "F&M&U", "U", "F" , "M", "F&U" ,"M&U"))
ega_dbgap_percent$year[ega_dbgap_percent$year == 1980] = "NA"
ega_dbgap_percent$year = factor(ega_dbgap_percent$year,
levels = c('NA','2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019','2020','2021'))
cbp1 <- c( "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
dbgap3 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"),
aes(x= year, color = label, group =label ))+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage studies")+
xlab("Year")+
theme_minimal()+
#facet_grid(repository~., scales= "free_y")+
#scale_color_manual(values = cbp1)+
scale_color_brewer(palette = "Set2")+
theme(axis.text.x = element_text(size = 10),
legend.position="top",
legend.box = "horizontal",
strip.text = element_text(size = 16, face = "bold"))+
guides(color=guide_legend(nrow=1,byrow=TRUE, title = "Study classification"))
ega3 = ggplot(subset(ega_dbgap_percent, repository == "EGA"),
aes(x= year, color = label, group =label ))+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage studies")+
xlab("Year")+
theme_minimal()+
#facet_grid(repository~., scales= "free_y")+
#scale_color_manual(values = cbp1)+
scale_color_brewer(palette = "Set2")+
theme(axis.text.x = element_text(size = 10),
legend.position="top",
legend.box = "horizontal",
strip.text = element_text(size = 16, face = "bold"))+
guides(color=guide_legend(nrow=1,byrow=TRUE, title = "Study classification"))
pp = plot_grid(dbgap1, dbgap2,ega1, ega2,
labels = c('A', 'B', "C", "D", "E", "F"),
ncol = 1, rel_heights = c(0.25,0.5, 0.25, 0.5),
label_x = "Year")
pp = plot_grid(dbgap1, dbgap2,dbgap3, ega1, ega2,ega3,
labels = c('A', 'B', "C", "D", "E", "F"),
ncol = 1, rel_heights = c(0.25,0.5, 0.25, 0.5),
label_x = "Year")
ega1
# Load data
ega = fread("../ega/all_EGA_samples.txt")
#ega$total_all = length(unique(ega$ega_stable_id))
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "dataset_id"
ega_m = melt(ega, id.vars = c("dataset_id", "repository", "date_study", "year", "total"))
ega_m$year[ega_m$year=="1980"] = "NA"
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "dataset_id", "filename", "date",'year', "total"))
dbgap_m$repository = "dbGaP"
dbgap_m$year[dbgap_m$year==""] = "NA"
# bind datasets
ega_dbgap = rbindlist(list(ega_m, dbgap_m), use.names = T, fill = T)
#total samples per year
ega_dbgap = ega_dbgap %>% group_by(repository, year) %>% mutate(total_year = sum(value))
################
# sample level #
################
ega1 = ggplot(subset(ega_dbgap_percent, repository == "EGA"),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year), color = "#ed553b")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
ega1
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
library(patchwork) # To display 2 charts together
#library(hrbrthemes)
library(cowplot)
# Load data
ega = fread("../ega/all_EGA_samples.txt")
#ega$total_all = length(unique(ega$ega_stable_id))
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "dataset_id"
ega_m = melt(ega, id.vars = c("dataset_id", "repository", "date_study", "year", "total"))
ega_m$year[ega_m$year=="1980"] = "NA"
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "dataset_id", "filename", "date",'year', "total"))
dbgap_m$repository = "dbGaP"
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
library(patchwork) # To display 2 charts together
#library(hrbrthemes)
library(cowplot)
# Load data
ega = fread("../ega/all_EGA_samples.txt")
#ega$total_all = length(unique(ega$ega_stable_id))
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "dataset_id"
ega_m = melt(ega, id.vars = c("dataset_id", "repository", "date_study", "year", "total"))
ega_m$year[ega_m$year=="1980"] = "NA"
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "dataset_id", "filename", "date",'year', "total"))
dbgap
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "dataset_id", "filename", "date",'year', "total"))
dbgap_m$repository = "dbGaP"
dbgap_m$year[dbgap_m$year==""] = "NA"
# bind datasets
ega_dbgap = rbindlist(list(ega_m, dbgap_m), use.names = T, fill = T)
#total samples per year
ega_dbgap = ega_dbgap %>% group_by(repository, year) %>% mutate(total_year = sum(value))
################
# sample level #
################
ega1 = ggplot(subset(ega_dbgap_percent, repository == "EGA"),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year), color = "#ed553b")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
library(patchwork) # To display 2 charts together
#library(hrbrthemes)
library(cowplot)
# Load data
ega = fread("../ega/all_EGA_samples.txt")
#ega$total_all = length(unique(ega$ega_stable_id))
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "dataset_id"
ega_m = melt(ega, id.vars = c("dataset_id", "repository", "date_study", "year", "total"))
ega_m$year[ega_m$year=="1980"] = "NA"
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "dataset_id", "filename", "date",'year', "total"))
dbgap_m$repository = "dbGaP"
dbgap_m$year[dbgap_m$year==""] = "NA"
# bind datasets
ega_dbgap = rbindlist(list(ega_m, dbgap_m), use.names = T, fill = T)
#total samples per year
ega_dbgap = ega_dbgap %>% group_by(repository, year) %>% mutate(total_year = sum(value))
ega_dbgap_percent = subset(ega_dbgap) %>% group_by(variable, repository, year) %>%
summarise(value_percent = sum(value) / sum(total),
total_year = unique(total_year))
ega_dbgap_percent$year = factor(ega_dbgap_percent$year ,
levels = c('NA','2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019','2020','2021'))
ega1 = ggplot(subset(ega_dbgap_percent, repository == "EGA"),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year), color = "#ed553b")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
ega1
ega2 = ggplot(subset(ega_dbgap_percent, repository =="EGA"),
aes(x=year,  color=variable, group=variable))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage of samples")+
xlab("Year")+
theme_minimal()+
scale_y_continuous(labels=scales::percent)+#,
#sec.axis = sec_axis(~.*0.01, name="Second Axis")) +
facet_grid(repository~.)+
scale_color_manual(values = c("#20639b", "#3caea3","#f6d55c"),
labels = c("Male", "Female", "Unknown"),
name ="")+
#scale_x_discrete(labels= c("M", "F", "U"))+
theme(legend.position = "top",
axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
dbgap1 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year), color = "#ed553b")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
dbgap2 = ggplot(subset(ega_dbgap_percent, repository =="dbGaP"),
aes(x=year,  color=variable, group=variable))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage of samples")+
xlab("Year")+
theme_minimal()+
scale_y_continuous(labels=scales::percent)+#,
ylim(0,1)+
#sec.axis = sec_axis(~.*0.01, name="Second Axis")) +
facet_grid(repository~.)+
scale_color_manual(values = c("#20639b", "#3caea3","#f6d55c"),
labels = c("Male", "Female", "Unknown"),
name ="")+
#scale_x_discrete(labels= c("M", "F", "U"))+
theme(legend.position = "top",
axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"))
# Load data
ega = fread("../ega/all_EGA_samples.txt")
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "dataset_id"
ega = ega %>% group_by(year) %>%
mutate(total_all = length(unique(dataset_id)))
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap$repository = "dbGaP"
dbgap$year[dbgap$year==""] = "NA"
#dbgap = subset(dbgap, year > 2017)
dbgap = dbgap %>% group_by(year) %>%
mutate(total_all = length(unique(dataset_id)))
dbgap$phe = substr(dbgap$filename, 8,19)
ega_dbgap = rbind(ega,dbgap[colnames(ega[,-6])])
################
# study level  #
################
unknown_only = subset(ega_dbgap, male == 0 & female == 0)
unknown_only$label = "U"
female_only = subset(subset(ega_dbgap, male == 0 & unknown == 0))
female_only$label = 'F'
male_only = subset(ega_dbgap, female == 0 & unknown == 0)
male_only$label = 'M'
female_and_male = subset(ega_dbgap, female != 0 & male != 0 & unknown == 0)
female_and_male$label = 'F&M'
female_and_unknown = subset(ega_dbgap, female != 0 & male == 0 & unknown != 0)
female_and_unknown$label = 'F&U'
male_and_unknown = subset(ega_dbgap, female == 0 & male != 0 & unknown != 0)
male_and_unknown$label = 'M&U'
female_and_male_and_unknown = subset(ega_dbgap, female != 0 & male != 0 & unknown != 0)
female_and_male_and_unknown$label = 'F&M&U'
r = rbind(unknown_only, female_only, male_only, female_and_male, female_and_unknown, male_and_unknown, female_and_male_and_unknown)
r $ c = 1
#write.table(r, 'ega_dbgap_studies_classification.txt', sep = "\t")
# percent
ega_dbgap_percent = unique(r %>% group_by(label, repository,year) %>%
summarise(value_percent = sum(c) / total_all))
f = arrange(ega_dbgap_percent, desc(value_percent))$label
ega_dbgap_percent$label = factor(ega_dbgap_percent$label, levels = c("F&M", "F&M&U", "U", "F" , "M", "F&U" ,"M&U"))
ega_dbgap_percent$year[ega_dbgap_percent$year == 1980] = "NA"
ega_dbgap_percent$year = factor(ega_dbgap_percent$year,
levels = c('NA','2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019','2020','2021'))
cbp1 <- c( "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
dbgap3 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"),
aes(x= year, color = label, group =label ))+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage studies")+
xlab("Sex specification in samples found in the study")+
theme_minimal()+
facet_grid(repository~., scales= "free_y")+
#scale_color_manual(values = cbp1)+
scale_color_brewer(palette = "Set2")+
theme(axis.text.x = element_text(size = 10),
legend.position="top",
legend.box = "horizontal",
strip.text = element_text(size = 16, face = "bold"))+
guides(color=guide_legend(nrow=1,byrow=TRUE, title = "Study classification"))
ega3 = ggplot(subset(ega_dbgap_percent, repository == "EGA"),
aes(x= year, color = label, group =label ))+
geom_point(aes(y = value_percent), size = 3)+
geom_line(aes(y = value_percent))+
ylab("Percentage studies")+
xlab("Sex specification in samples found in the study")+
theme_minimal()+
facet_grid(repository~., scales= "free_y")+
#scale_color_manual(values = cbp1)+
scale_color_brewer(palette = "Set2")+
theme(axis.text.x = element_text(size = 10),
legend.position="top",
legend.box = "horizontal",
strip.text = element_text(size = 16, face = "bold"))+
guides(color=guide_legend(nrow=1,byrow=TRUE, title = "Study classification"))
pp = plot_grid(dbgap1, dbgap2,dbgap3, ega1, ega2,ega3
labels = c('A', 'B', "C", "D","E", "F"), ncol = 1, rel_heights = c(0.25,0.5, 0.25, 0.5))
pp = plot_grid(dbgap1, dbgap2,dbgap3, ega1, ega2,ega3,
labels = c('A', 'B', "C", "D","E", "F"),
ncol = 1, rel_heights = c(0.25,0.5,0.5, 0.25, 0.5,0.5))
pp
png('../figures/figure3_alternative.png',
width = 1500, height = 2000, res = 150)
pp
dev.off()
pp2 = plot_grid(dbgap3, ega3,
labels = c('A', 'B'),
ncol = 1, rel_heights = c(0.5,0.5))
pp2
png('../figures/figure4.png',
width = 1500, height = 1000, res = 200)
pp
dev.off()
png('../figures/figure4.png',
width = 1500, height = 1000, res = 200)
pp2
dev.off()
png('../figures/figure4.png',
width = 1500, height = 1100, res = 200)
pp2
>>>>>>> parent of 547c59c... updated code and figures
dev.off()
