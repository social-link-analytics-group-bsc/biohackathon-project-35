ggplot(subset(ega_dbgap_bp_m, (variable=="female_prop" & value <100 & value >0) | (variable !=  "female_prop")),
aes(x=value, fill = variable))+
geom_boxplot()
ega_dbgap_bp_m
sum(subset(ega_dbgap_bp_m, repository == "EGA")$female )
sum(subset(ega_dbgap_bp_m, repository == "EGA")$male )
sum(subset(ega_dbgap_bp_m, repository == "EGA" & male == 0 & unknown == 0)$male )
sum(subset(ega_dbgap_bp_m, repository == "EGA" & male == 0 & unknown == 0)$demale )
sum(subset(ega_dbgap_bp_m, repository == "EGA" & male == 0 & unknown == 0)$female )
sum(subset(ega_dbgap_bp_m, repository == "EGA" & female == 0 & unknown == 0)$male )
(subset(ega_dbgap_bp_m, repository == "EGA" & male == 0 & unknown == 0)
)
length(unique(subset(ega_dbgap_bp_m, repository == "EGA" & male == 0 & unknown == 0)$study_id))
length(unique(subset(ega_dbgap_bp_m, repository == "EGA" & female == 0 & unknown == 0)$study_id))
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
install.packages("lubridate")
install.packages('lubridate')
library(lubridate)
.connect2internet()
Sys.setenv(http_proxy='http://158.169.131.13:8012/')
Sys.setenv(https_proxy='http://158.169.131.13:8012/')
Sys.setenv('http_proxy_user'='USERNAME:PASSWORD')
options(download.file.method='wininet')
.connect2internet()
Sys.setenv('http_proxy_user'='ruizsvi:G4T0BL4k')
options(download.file.method='wininet')
.connect2internet()
Sys.setenv(http_proxy='http://158.169.131.13:8012/')
Sys.setenv(https_proxy='http://158.169.131.13:8012/')
Sys.setenv('http_proxy_user'='ruizsvi:G4T0BL4k')
options(download.file.method='wininet')
.connect2internet()
install.packages("lubridate")
library(lubridate)
# Load data
ega = fread("../ega/EGA_with_NULL.csv")
ega_m = melt(ega, id.vars = c("ega_stable_id", "repository", "to_char", "total"))
colnames(ega_m)[colnames(ega_m) == "ega_stable_id"] = "dataset_id"
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap$repository = "dbGaP"
dbgap$year[dbgap$year==""] = "NA"
dbgap = subset(dbgap, year > 2017)
spl = str_split_fixed(str_remove(dbgap$filename,'\\.\\/data\\/'), '\\.',6)
dbgap$study_id = paste(spl[,1],spl[,2],spl[,5], sep=".")
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "study_id", "filename", "date",'year', "total", "dataset_id", "repository"))
# bind datasets
ega_dbgap = rbindlist(list(ega_m, dbgap_m), use.names = T, fill = T)
################
# sample level #
################
ega_dbgap_percent = ega_dbgap %>% group_by(variable, repository) %>%
summarise(value_percent = sum(value) / sum(total))
ega_dbgap_percent$variable = factor(ega_dbgap_percent$variable, levels=c("female", "male", "unknown"))
sample_plot_percent = ggplot(ega_dbgap_percent, aes(x=variable, y = value_percent, fill=variable))+
geom_bar(stat="identity", width= 0.75)+
ylab("Percentage of samples in all studies")+
xlab("Biological sex classification")+
theme_minimal()+
scale_y_continuous(labels=scales::percent) +
facet_grid(~repository)+
scale_fill_manual(values = c("#20639b", "#3caea3","#f6d55c"))+
theme(legend.position = "none",
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 13),
strip.text = element_text(size = 16, face = "bold"))
sample_plot_percent
####
# Boxplot
#########
ega = fread("../ega/EGA_with_NULL.csv")
ega$total_all = length(unique(ega$ega_stable_id))
colnames(ega)[1] = "study_id"
#d2 = melt(d,id.vars = c("ega_stable_id", "repository", "to_char", "total"))
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$repository="dbGaP"
spl = str_split_fixed(str_remove(dbgap$filename,'\\.\\/data\\/'), '\\.',6)
dbgap$study_id = paste(spl[,1],spl[,2],spl[,5], sep=".")
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap2 =dbgap%>%group_by(study_id,repository)%>%
summarise(male = sum(male),
female = sum(female),
unknown = sum (unknown),
total = sum (total),
year = max(year))
dbgap2 = subset(dbgap2, year >= 2018)
dbgap2$total_all = length(unique(dbgap2$study_id))
ega_dbgap = rbind(ega,dbgap2, fill = T)
ega_dbgap
ega_dbgap_bp = ega_dbgap %>% group_by(repository, study_id)%>%
mutate(female_prop = female/total*100,
male_prop = male/total*100,
unk_prop = unknown/total*100)
ega_dbgap_bp
ega_dbgap_bp_m = melt(ega_dbgap_bp,measure.vars = c("female_prop", "male_prop", "unk_prop"))
my_comparisons <- list( c("female_prop", "male_prop"), c("male_prop", "unk_prop"),
c("female_prop", "unk_prop") )
library(ggpubr)
bp_prop = ggboxplot(ega_dbgap_bp_m, x = "variable", y = "value",
fill = "variable",
palette = c("#20639b", "#3caea3","#f6d55c"),
facet.by="repository",
xlab = "Biological sex classification",
ylab = "Percentage of samples in individual studies")+
stat_compare_means(comparisons = my_comparisons,
method="wilcox.test",
paired = T, label = "p.signif")+
scale_x_discrete(labels = c("female", "male", "unknown"))+
theme_minimal()+
theme(legend.position = "none",
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 13))
bp_prop
install.pacakges("ggpubr")
install.packages("ggpubr")
library(ggpubr)
bp_prop = ggboxplot(ega_dbgap_bp_m, x = "variable", y = "value",
fill = "variable",
palette = c("#20639b", "#3caea3","#f6d55c"),
facet.by="repository",
xlab = "Biological sex classification",
ylab = "Percentage of samples in individual studies")+
stat_compare_means(comparisons = my_comparisons,
method="wilcox.test",
paired = T, label = "p.signif")+
scale_x_discrete(labels = c("female", "male", "unknown"))+
theme_minimal()+
theme(legend.position = "none",
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 13))
bp_prop
ega_dbgap_bp_
ega_dbgap_bp_m
ggplot(ega_dbgap_bp_m, aes(x=value, fill=variable))+
geom_density()+
geom_facet(~repository)
ggplot(ega_dbgap_bp_m, aes(x=value, fill=variable))+
geom_density()+
facet_grid(~repository)
bp_prop = ggboxplot(ega_dbgap_bp_m, x = "variable", y = "value",
color = "variable",add="jitter"
palette = c("#20639b", "#3caea3","#f6d55c"),
bp_prop = ggboxplot(ega_dbgap_bp_m, x = "variable", y = "value",
color = "variable",add="jitter",
palette = c("#20639b", "#3caea3","#f6d55c"),
facet.by="repository",
xlab = "Biological sex classification",
ylab = "Percentage of samples in individual studies")+
stat_compare_means(comparisons = my_comparisons,
method="wilcox.test",
paired = T, label = "p.signif")+
scale_x_discrete(labels = c("female", "male", "unknown"))+
theme_minimal()+
theme(legend.position = "none",
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 13))
bp_prop
bp_prop = ggpaired(ega_dbgap_bp_m, x = "variable", y = "value",
color = "variable",add="jitter",line.color = "gray", line.size = 0.4,
palette = c("#20639b", "#3caea3","#f6d55c"),
facet.by="repository",
xlab = "Biological sex classification",
ylab = "Percentage of samples in individual studies")+
stat_compare_means(comparisons = my_comparisons,
method="wilcox.test",
paired = T, label = "p.signif")+
scale_x_discrete(labels = c("female", "male", "unknown"))+
theme_minimal()+
theme(legend.position = "none",
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 13))
bp_prop = ggpaired(ega_dbgap_bp_m, x = "variable", y = "value",
color = "variable",add="jitter",line.color = "gray", line.size = 0.4,
palette = c("#20639b", "#3caea3","#f6d55c"),
facet.by="repository",
xlab = "Biological sex classification",
ylab = "Percentage of samples in individual studies")
ggplot(ega_dbgap_bp_m, aes(x=value, fill=variable))+
geom_histogram()+
facet_grid(~repository)
ggplot(ega_dbgap_bp_m, aes(x=value, fill=variable))+
geom_histogram(binwidth = 1)+
facet_grid(~repository)
ega_dbgap_bp_m
shapiro.test(subset(ega_dbgap_bp_m, variable =="female_prop" ))
shapiro.test(subset(ega_dbgap_bp_m, variable =="female_prop" )$value)
shapiro.test(subset(ega_dbgap_bp_m, variable =="female_prop" & repository =="dbGaP" )$value)
shapiro.test(subset(ega_dbgap_bp_m, variable =="male_prop" & repository =="dbGaP" )$value)
shapiro.test(subset(ega_dbgap_bp_m, variable =="unknown_prop" & repository =="dbGaP" )$value)
unique(ega_dbgap_bp_m$variable)
shapiro.test(subset(ega_dbgap_bp_m, variable =="unk_prop" & repository =="dbGaP" )$value)
shapiro.test(subset(ega_dbgap_bp_m, variable =="female_prop" & repository =="EGA" )$value)
shapiro.test(subset(ega_dbgap_bp_m, variable =="male_prop" & repository =="EGA" )$value)
shapiro.test(subset(ega_dbgap_bp_m, variable =="unk_prop" & repository =="EGA" )$value)
ega_dbgap_bp_m
?wilcox.test()
wilcox.test(ega_dbgap_bp_m$female, ega_dbgap_bp_m$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m & repository =="dbGaP" )$female,
subset(ega_dbgap_bp_m & repository =="dbGaP" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="dbGaP" )$female,
subset(ega_dbgap_bp_m , repository =="dbGaP" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="EGA" )$female,
subset(ega_dbgap_bp_m , repository =="EGA" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="EGA" )$female,
subset(ega_dbgap_bp_m , repository =="EGA" )$unknown, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="EGA" )$unknown,
subset(ega_dbgap_bp_m , repository =="EGA" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="EGA" )$female,
subset(ega_dbgap_bp_m , repository =="EGA" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="dbGaP" )$female,
subset(ega_dbgap_bp_m , repository =="dbGaP" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="dbGaP" )$female,
subset(ega_dbgap_bp_m , repository =="dbGaP" )$unknown, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="dbGaP" )$unknown,
subset(ega_dbgap_bp_m , repository =="dbGaP" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="EGA" )$female,
subset(ega_dbgap_bp_m , repository =="EGA" )$male, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="EGA" )$female,
subset(ega_dbgap_bp_m , repository =="EGA" )$unknown, paired = T)
wilcox.test(subset(ega_dbgap_bp_m , repository =="EGA" )$unknown,
subset(ega_dbgap_bp_m , repository =="EGA" )$male, paired = T)
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
library(patchwork)
library(cowplot)
library(zoo)
# Load data
ega = fread("../ega/all_EGA_samples.txt")
ega$date = as.Date(parse_date_time(ega$date_study, orders = c('ymd')))
ega$ym = as.yearmon(ega$date)
ega$month = month(ega$date_study)
ega$year = str_split_fixed(ega$date_study, '-', 2)[,1]
colnames(ega)[1] = "study_id"
ega_m = melt(ega, id.vars = c("study_id", "repository", "ym", "year", "total", "date", "month", "date_study"))
ega_m$year[ega_m$year=="1980"] = NA
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = as.Date(parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y")))
dbgap$ym = as.yearmon(dbgap$date)
dbgap$month = month(dbgap$date)
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
spl = str_split_fixed(str_remove(dbgap$filename,'\\.\\/data\\/'), '\\.',6)
dbgap$study_id = paste(spl[,1],spl[,2],spl[,5], sep=".")
dbgap2 =dbgap%>%group_by(study_id)%>%
summarise(male = sum(male),
female = sum(female),
unknown = sum (unknown),
total = sum (total),
year = max(year),
ym = max(ym))
dbgap_m = melt(dbgap2, id.vars= c("study_id", 'year', "ym","total"))
dbgap_m$repository = "dbGaP"
dbgap_m$year[dbgap_m$year==""] = NA
dbgap
subset(dbgap, year ==2017)
arrange(subset(dbgap, year ==2017), n)
arrange(subset(dbgap, year ==2017), unknown)
dbgap_m = melt(dbgap2, id.vars= c("study_id", 'year', "ym","total"))
dbgap_m$repository = "dbGaP"
dbgap_m$year[dbgap_m$year==""] = NA
# bind datasets
ega_dbgap = rbindlist(list(ega_m, dbgap_m), use.names = T, fill = T)
#total samples per year
ega_dbgap = ega_dbgap %>% group_by(repository,year) %>% mutate(total_year = sum(value))
################
# sample level #
################
ega_dbgap_percent = subset(ega_dbgap) %>% group_by(variable, repository, year) %>%
summarise(value_percent = sum(value) / unique(total_year),
total_year = unique(total_year),
sd= sd(value),
n_studies = n_distinct(study_id))
ega_dbgap_percent$year = factor(ega_dbgap_percent$year ,
levels = c(NA,'2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019','2020','2021'))
coeff = 1000
coeff = 10000
dbgap1 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"& !is.na(year)),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year/coeff), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year/coeff), color = "#ed553b")+
geom_point(aes(y = n_studies), size = 3,  color = "#800080")+
geom_line(aes(y = n_studies), color = "#800080")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
ggtitle("dbGaP")+
# facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(hjust = 0.5, face= "bold", size = 20 ),
axis.title.y = element_text(color ="#800080" , size=13),
axis.title.y.right = element_text(color = "#ed553b", size=13)) +
scale_y_continuous(
# Features of the first axis
name = "# studies",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="# samples")
)
dbgap1
dbgap1 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"& !is.na(year) & study_id != "phs001252.v1.p1"),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year/coeff), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year/coeff), color = "#ed553b")+
geom_point(aes(y = n_studies), size = 3,  color = "#800080")+
geom_line(aes(y = n_studies), color = "#800080")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
ggtitle("dbGaP")+
# facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(hjust = 0.5, face= "bold", size = 20 ),
axis.title.y = element_text(color ="#800080" , size=13),
axis.title.y.right = element_text(color = "#ed553b", size=13)) +
scale_y_continuous(
# Features of the first axis
name = "# studies",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="# samples")
)
ega_dbgap_percent
ega_dbgap
dbgap_m
# bind datasets
ega_dbgap = rbindlist(list(ega_m, subset(dbgap_m, study_id!="phs001252.v1.p1")), use.names = T, fill = T)
#total samples per year
ega_dbgap = ega_dbgap %>% group_by(repository,year) %>% mutate(total_year = sum(value))
################
# sample level #
################
ega_dbgap_percent = subset(ega_dbgap) %>% group_by(variable, repository, year) %>%
summarise(value_percent = sum(value) / unique(total_year),
total_year = unique(total_year),
sd= sd(value),
n_studies = n_distinct(study_id))
ega_dbgap_percent$year = factor(ega_dbgap_percent$year ,
levels = c(NA,'2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019','2020','2021'))
dbgap1 = ggplot(subset(ega_dbgap_percent, repository == "dbGaP"& !is.na(year)),
aes(x=year,  group=repository))+
# geom_line(aes(y = total_year),fill = "grey30", stat="identity", width= 0.8)+
geom_point(aes(y = total_year/coeff), size = 3,  color = "#ed553b")+
geom_line(aes(y = total_year/coeff), color = "#ed553b")+
geom_point(aes(y = n_studies), size = 3,  color = "#800080")+
geom_line(aes(y = n_studies), color = "#800080")+
ylab("# samples")+
xlab("Year")+
theme_minimal()+
ggtitle("dbGaP")+
# facet_grid(repository~.)+
theme(axis.text.x = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(hjust = 0.5, face= "bold", size = 20 ),
axis.title.y = element_text(color ="#800080" , size=13),
axis.title.y.right = element_text(color = "#ed553b", size=13)) +
scale_y_continuous(
# Features of the first axis
name = "# studies",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="# samples")
)
dbgap1
arrange(subset(dbgap, year ==2020), unknown)
arrange(subset(dbgap, year ==2020), n)
ggplot(dbgap_m, aes(x=value, color = variable))+
geom_histogram()
ggplot(dbgap_m, aes(x=value, color = variable))+
geom_density()
ggplot(dbgap_m, aes(x=value, color = variable))+
geom_density()+
facet_grid(~variable)
subset(dbgap_m, study_id=="phs001252.v1.p1"))
subset(dbgap_m, study_id=="phs001252.v1.p1")
subset(dbgap2, study_id=="phs001252.v1.p1")
subset(dbgap, study_id=="phs001252.v1.p1")
4052+7510
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
# Load data
ega = fread("../ega/EGA_with_NULL.csv")
ega_m = melt(ega, id.vars = c("ega_stable_id", "repository", "to_char", "total"))
colnames(ega_m)[colnames(ega_m) == "ega_stable_id"] = "dataset_id"
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap$repository = "dbGaP"
dbgap$year[dbgap$year==""] = "NA"
dbgap = subset(dbgap, year > 2017)
spl = str_split_fixed(str_remove(dbgap$filename,'\\.\\/data\\/'), '\\.',6)
dbgap$study_id = paste(spl[,1],spl[,2],spl[,5], sep=".")
dbgap_m = melt(dbgap, id.vars= c("V1", "n", "study_id", "filename", "date",'year', "total", "dataset_id", "repository"))
# bind datasets
ega_dbgap = rbindlist(list(ega_m, dbgap_m), use.names = T, fill = T)
ega_dbgap
ggplot(ega_dbgap, aes(x=value, fill = variable))+
geom_histogram()+
facet_grid(~repository)
ggplot(ega_dbgap, aes(x=value, fill = variable))+
geom_density()+
facet_grid(~repository)
ggplot(ega_dbgap, aes(x=value, fill = variable))+
geom_density()+
facet_grid(repository~.)
ggplot(ega_dbgap, aes(x=value, fill = variable))+
geom_histogram()+
facet_grid(repository~.)
ggplot(ega_dbgap, aes(x=value, fill = variable))+
geom_histogram(bins = 50)+
facet_grid(repository~.)
ggplot(ega_dbgap, aes(x=value, fill = variable))+
geom_histogram(bins = 1000)+
facet_grid(repository~.)
ggplot(subset(ega_dbgap, value < 1000), aes(x=value, fill = variable))+
geom_histogram(bins = 1000)+
facet_grid(repository~.)
ggplot(subset(ega_dbgap, value < 1000), aes(x=value, fill = variable))+
#geom_histogram(bins = 1000)+
geom_density()+
facet_grid(repository~.)
ggplot(subset(ega_dbgap, value < 250), aes(x=value, fill = variable))+
#geom_histogram(bins = 1000)+
geom_density()+
facet_grid(repository~.)
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
# Load data
ega = fread("../ega/EGA_with_NULL.csv")
ega$total_all = length(unique(ega$ega_stable_id))
#d2 = melt(d,id.vars = c("ega_stable_id", "repository", "to_char", "total"))
dbgap = fread("../dbpgap/summary_fourth.csv")
dbgap$total = dbgap$male +  dbgap$female +  dbgap$unknown
dbgap$repository="dbGaP"
spl = str_split_fixed(str_remove(dbgap$filename,'\\.\\/data\\/'), '\\.',6)
dbgap$study_id = paste(spl[,1],spl[,2],spl[,5], sep=".")
dbgap$date = parse_date_time(dbgap$date, orders = c('mdy', 'dmy','ymd', "%d %m &y %H:%M:%S %Y"))
dbgap$year =str_split_fixed(dbgap$date, '-', 2)[,1]
dbgap2 =dbgap%>%group_by(study_id,repository)%>%
summarise(male = sum(male),
female = sum(female),
unknown = sum (unknown),
total = sum (total),
year = max(year))
dbgap2 = subset(dbgap2, year >= 2018)
dbgap2$total_all = length(unique(dbgap2$study_id))
ega_dbgap = rbind(ega,dbgap2, fill = T)
ega_dbgap
################
# study level  #
################
unknown_only = subset(ega_dbgap, male == 0 & female == 0)
unknown_only$label = "U"
female_only = subset(subset(ega_dbgap, male == 0 & unknown == 0))
female_only$label = 'F'
male_only = subset(ega_dbgap, female == 0 & unknown == 0)
male_only$label = 'M'
female_and_male = subset(ega_dbgap, female != 0 & male != 0 & unknown == 0)
female_and_male$label = 'F&M'
female_and_unknown = subset(ega_dbgap, female != 0 & male == 0 & unknown != 0)
female_and_unknown$label = 'F&U'
male_and_unknown = subset(ega_dbgap, female == 0 & male != 0 & unknown != 0)
male_and_unknown$label = 'M&U'
female_and_male_and_unknown = subset(ega_dbgap, female != 0 & male != 0 & unknown != 0)
female_and_male_and_unknown$label = 'F&M&U'
r = rbind(unknown_only, female_only, male_only, female_and_male, female_and_unknown, male_and_unknown, female_and_male_and_unknown)
r $ c = 1
# percent
ega_dbgap_percent = unique(r %>% group_by(label, repository) %>%
summarise(value_percent = sum(c) / total_all))
r
subset(r, label =="F")
subset(r, label =="F" & repository=="EGA")
sum(subset(r, label =="F" & repository=="EGA")$total)
sum(subset(r, label =="F" & repository=="EGA")$female)
sum(subset(r, label =="F&M" & repository=="EGA")$female)
subset(r, label =="F&M" & repository=="EGA")
sum(subset(r, label =="F&M" & repository=="EGA")$male)
sum(subset(r,  repository=="EGA")$male)
sum(subset(r,  repository=="EGA")$female)
subset(r, label =="F&M" & repository=="EGA" & female > male )
subset(r, label =="F&M" & repository=="EGA" & female < male )
sum(subset(r, label =="F&M" & repository=="EGA" & female < male )$female)
sum(subset(r, label =="F&M" & repository=="EGA" & female > male )$female)
sum(subset(r, label =="F&M" & repository=="EGA" & female > male )$male)
sum(subset(r, label =="F&M" & repository=="EGA" & female < male )$male)
74-45
170-96
sum(subset(r, label =="F&M" & repository=="EGA" & female < male )$total)
sum(subset(r, label =="F&M" & repository=="EGA" & female > male )$total)
