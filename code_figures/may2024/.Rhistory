mutate(FMratio = female/male)%>%
filter(!FMratio %in% c("NaN", "Inf"))%>%
group_by(phenotype) %>%
summarise(FMratio_mean = mean(FMratio))
dbgap_ratio =arrange(dbgap_ratio, desc(FMratio_mean))
dbgap_ratio $repository = "dbGaP"
dbgap_ratio$x = 1:nrow(dbgap_ratio)
dbgap_ratio[1:20,]
library(ggplot2)
library(ggrepel)
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Polycystic Ovary Syndrome',
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease')),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = Inf, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
### dbGaP
dbgap = fread("./dbgap_may2024.csv")
dbgap$repository = "dbGaP"
dbgap = dbgap[,-3]
dbgap= subset(dbgap, year > 2017)
dbgap_phe = fread("../../dbpgap/dbGaP primary phenotypes/dbGaP_primary_phenotypes.tsv", header = F,
col.names = c("study_id","phenotype"))
dbgap_phe
library(dplyr)
dbgap = merge(dbgap, dbgap_phe)
dbgap_ratio = dbgap %>%
#summarise(tot_male = sum(male),
#          tot_female = sum(female))%>%
mutate(FMratio = female/male)%>%
filter(!FMratio %in% c("NaN", "Inf"))%>%
group_by(phenotype) %>%
summarise(FMratio_mean = mean(FMratio))
dbgap_ratio
dbgap_ratio =arrange(dbgap_ratio, desc(FMratio_mean))
dbgap_ratio $repository = "dbGaP"
dbgap_ratio$x = 1:nrow(dbgap_ratio)
dbgap_ratio[1:20,]
library(ggplot2)
library(ggrepel)
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Polycystic Ovary Syndrome',
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease')),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = Inf, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
dbgap_ratio[1:20,]
tail(dbgap_ratio)
tail(subset(dbgap_ratio, FMratio_mean >0))
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Peripheral Nervous System Diseases",
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms')),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = Inf, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
png('../../figures/figure5_may2024.png',
width = 3000, height = 3000, res = 300)
plot_grid(NULL,phe_dbgap_plot+theme(axis.text =  element_text(size = 11),
axis.title = element_text(size = 13)),
NULL, phe_ega_plot+theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13)),
labels = c("dbGaP","", "EGA",""),
align = 'vh', ncol = 1, rel_heights = c(0.1,1,0.1,1))
dev.off()
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms')),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = Inf, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms')),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = 1000, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms')),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = 100, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms')),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = 2000, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
dbgap
length(unique(dbgap$phenotype))
ega_phe
length(unique(ega_phe$ega_study))
dbgap_phe
dbgap = left_join(dbgap, dbgap_phe)
### dbGaP
dbgap = fread("./dbgap_may2024.csv")
dbgap$repository = "dbGaP"
dbgap = dbgap[,-3]
dbgap= subset(dbgap, year > 2017)
dbgap_phe = fread("../../dbpgap/dbGaP primary phenotypes/dbGaP_primary_phenotypes.tsv", header = F,
col.names = c("study_id","phenotype"))
dbgap_phe
dbgap = left_join(dbgap, dbgap_phe)
unique(dbgap$phenotype)
subset(dbgap, is.na(phenotype) )
750-38
subset(dbgap, is.na(phenotype) )$study_id %in% dbgap_phe
length(unique(dbgap$phenotype))
#########################################
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(lubridate)
### dbGaP
dbgap = fread("./dbgap_may2024.csv")
dbgap$repository = "dbGaP"
dbgap = dbgap[,-3]
dbgap= subset(dbgap, year > 2017)
dbgap_phe = fread("../../dbpgap/dbGaP primary phenotypes/dbGaP_primary_phenotypes.tsv", header = F,
col.names = c("study_id","phenotype"))
dbgap_phe
library(dplyr)
dbgap = left_join(dbgap, dbgap_phe)
dbgap_ratio = dbgap %>%
#summarise(tot_male = sum(male),
#          tot_female = sum(female))%>%
mutate(FMratio = female/male)%>%
filter(!FMratio %in% c("NaN", "Inf"))%>%
group_by(phenotype) %>%
summarise(FMratio_mean = mean(FMratio))
dbgap_ratio
dbgap_ratio =arrange(dbgap_ratio, desc(FMratio_mean))
dbgap_ratio $repository = "dbGaP"
dbgap_ratio$x = 1:nrow(dbgap_ratio)
dbgap_ratio[1:20,]
subset(dbgap_ratio, phenotype %like% "Prostatic")
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms', "Anorexia Nervosa")),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = Inf, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
dbgap_ratio
dbgap_ratio =arrange(dbgap_ratio, desc(FMratio_mean))
dbgap_ratio $repository = "dbGaP"
dbgap_ratio$x = 1:nrow(dbgap_ratio)
dbgap_ratio[1:20,]
library(ggplot2)
library(ggrepel)
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms', "Anorexia Nervosa")),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = Inf, box.padding = 3)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
# EGA
ega_phe = fread("../../../EGA_examples/raw_phenotype_gender_ega.txt")
ega_phe$n = 1
# mmm$ega_study = mmm2[,1]
# mmm$phe = mmm2[,2]
# u_ega= fread('unknown_EGAstudies_before2016.txt')
# table(u_ega$year)
#
# colnames(mmm)[1]= "ega_stable_id"
# left_join(u_ega, mmm, by = "ega_stable_id")
# "EGAS00001001585" %in% mmm$ega_stable_id
# length(unique(mmm$ega_stable_id))
#############################
ega_sum = ega_phe%>%group_by(ega_study,gender, phenotype)%>%
summarise(n = sum(n))
ega_sum = subset(ega_sum, gender !="unknown")
library(tidyverse)
ega_sum =ega_sum %>% spread(gender, n)
ega_sum$total = ega_sum$female +ega_sum$male
ega_tot = ega_sum %>% group_by (phenotype) %>%
summarise(total_all = sum(total))%>%
filter(!is.na(total_all))
top100 = arrange(ega_tot, desc(total_all))[1:100,]
top100$phenotype
ega_sub100 = subset(ega_sum, phenotype %in% top100$phenotype)
ega_sub100$FMratio = ega_sub100$female / ega_sub100$male
ega_sub100 = subset(ega_sub100,!FMratio %in% c("NaN", "Inf", NA))
ega_sub100 = ega_sub100%>%
group_by(phenotype) %>%
summarise(FMratio_mean = mean(FMratio))
ega_sum$FMratio = ega_sum$female / ega_sum$male
ega_sum = subset(ega_sum,!FMratio %in% c("NaN", "Inf", NA))
ega_sum = ega_sum%>%
group_by(phenotype) %>%
summarise(FMratio_mean = mean(FMratio))
ega_ratio =arrange(ega_sub100, desc(FMratio_mean))
ega_ratio$repository = "EGA"
ega_ratio$x = 1:nrow(ega_ratio)
s= rbindlist(list(dbgap_ratio,ega_ratio))
s$FMratio_mean = round(s$FMratio_mean,2)
ega_ratio[21:40,]
phe_ega_plot = ggplot(ega_ratio, aes(x=x, y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(ega_ratio, x %in% c(1,12,6,17,18,26,24,75,93,100)),
aes(x = x, y = log(FMratio_mean),
label = phenotype ),
max.overlaps = Inf, box.padding = 1)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_ega_plot
library(cowplot)
png('../../figures/figure5_may2024.png',
width = 3000, height = 3000, res = 300)
plot_grid(NULL,phe_dbgap_plot+theme(axis.text =  element_text(size = 11),
axis.title = element_text(size = 13)),
NULL, phe_ega_plot+theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13)),
labels = c("dbGaP","", "EGA",""),
align = 'vh', ncol = 1, rel_heights = c(0.1,1,0.1,1))
dev.off()
phe_dbgap_plot = ggplot(subset(dbgap_ratio, FMratio_mean >0), aes(x=x,y =log(FMratio_mean)))+
geom_bar(stat = "identity")+
geom_label_repel(data = subset(dbgap_ratio, phenotype %in% c('Breast Neoplasms',
"Uterine Cervical Neoplasms",
'Menopause',
'Barrett Esophagus',
'Prostate cancer, familial',
'Autism Spectrum Disorder',
'Diabetes Mellitus, Type 1',
'Cardiomyopathies',
'Anxiety',
'Chronic Obstructive Pulmonary Disease',
'Cardiovascular Disease',
'Urologic Neoplasms',
'Testicular Germ Cell Tumor',
'Prostatic Neoplasms', "Anorexia Nervosa")),
aes(x = x, y =log(FMratio_mean),
label = phenotype),
max.overlaps = Inf, box.padding = 1)+
theme_minimal()+
xlab("Primary phenotype")+
ylab("log(F/M ratio)")+
theme(axis.text.x = element_blank())
phe_dbgap_plot
png('../../figures/figure5_may2024.png',
width = 3000, height = 3000, res = 300)
plot_grid(NULL,phe_dbgap_plot+theme(axis.text =  element_text(size = 11),
axis.title = element_text(size = 13)),
NULL, phe_ega_plot+theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13)),
labels = c("dbGaP","", "EGA",""),
align = 'vh', ncol = 1, rel_heights = c(0.1,1,0.1,1))
dev.off()
View(dbgap_ratio)
fwrite(dbgap_ratio, 'dbgap_FMratio_may2024.csv')
library(data.table)
library(reshape2)
library(ggplot2)
library(stringr)
library(dplyr)
library(lubridate)
# Load data
ega = fread("../ega/EGA_with_NULL.csv")
ega$total_all = length(unique(ega$ega_stable_id))
# Load data
ega = fread("../../ega/EGA_with_NULL.csv")
ega$total_all = length(unique(ega$ega_stable_id))
#d2 = melt(d,id.vars = c("ega_stable_id", "repository", "to_char", "total"))
dbgap = fread("./dbgap_may2024.csv")
dbgap$repository = "dbGaP"
dbgap = subset(dbgap, year > 2017)
dbgap$total_all = length(unique(dbgap$study_id))
ega_dbgap = rbind(ega,dbgap2, fill = T)
ega_dbgap
ega_dbgap = rbind(ega,dbgap, fill = T)
ega_dbgap
################
# study level  #
################
female_only = subset(subset(ega_dbgap, male == 0 & unknown == 0))
female_only$label = 'F'
male_only = subset(ega_dbgap, female == 0 & unknown == 0)
male_only$label = 'M'
subset(female_only, total >= 100)
subset(male_only, total >= 100)
ega_phe = fread("../../../EGA_examples/raw_phenotype_gender_ega.txt")
dbgap_phe = fread("../../../dbGaP primary phenotypes/dbGaP_primary_phenotypes.tsv", header = F,
col.names = c("study_id","phenotype"))
dbgap_phe = fread("../../dbGaP primary phenotypes/dbGaP_primary_phenotypes.tsv", header = F,
col.names = c("study_id","phenotype"))
dbgap_phe = fread("../../dbpgap/dbGaP primary phenotypes/dbGaP_primary_phenotypes.tsv", header = F,
col.names = c("study_id","phenotype"))
colnames(ega_phe)[2] = "ega_stable_id"
dbg = left_join(subset(rbindlist(list(male_only,female_only)),total>=100), dbgap_phe)
dbg = subset(unique(dbg[,c("study_id","phenotype","label", "total")]), !is.na(study_id))
list_results = list()
for (s in dbg$study_id){
title = system(paste("curl -s 'https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=",s,"' | grep 'study-name'", sep =""),intern=TRUE)
if(length(attr(title,"status"))!= 0){
next
}
clean_title = str_split(title, '>|<')[[1]][3]
list_results[[s]] = data.frame(study_id =s, title = clean_title)
}
Sys.setenv(http_proxy='http://158.169.131.13:8012/')
Sys.setenv(https_proxy='http://158.169.131.13:8012/')
Sys.setenv('http_proxy_user'='ruizsvi:G4T0BL4k')
options(download.file.method='wininet')
.connect2internet()
list_results = list()
for (s in dbg$study_id){
title = system(paste("curl -s 'https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=",s,"' | grep 'study-name'", sep =""),intern=TRUE)
if(length(attr(title,"status"))!= 0){
next
}
clean_title = str_split(title, '>|<')[[1]][3]
list_results[[s]] = data.frame(study_id =s, title = clean_title)
}
df = rbindlist(list_results)
df
s
dbg
list_results = list()
for (s in dbg$study_id){
title = system(paste("curl -s 'https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=",s,"' | grep 'study-name'", sep =""),intern=TRUE)
print(title)
if(length(attr(title,"status"))!= 0){
next
}
clean_title = str_split(title, '>|<')[[1]][3]
list_results[[s]] = data.frame(study_id =s, title = clean_title)
}
list_results = list()
for (s in dbg$study_id){
#title = system(paste("curl -s 'https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=",s,"' | grep 'study-name'", sep =""),intern=TRUE)
cmd <- paste("powershell -Command \"curl -s 'https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", s, "' | Select-String 'study-name'\"", sep = "")
title <- system(cmd, intern = TRUE)
print(title)
if(length(attr(title,"status"))!= 0){
next
}
clean_title = str_split(title, '>|<')[[1]][3]
list_results[[s]] = data.frame(study_id =s, title = clean_title)
}
list_results = list()
for (s in dbg$study_id){
#title = system(paste("curl -s 'https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=",s,"' | grep 'study-name'", sep =""),intern=TRUE)
cmd <- sprintf(
"powershell -Command \"(Invoke-WebRequest -Uri 'https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=%s').Content | Select-String 'study-name'\"",
s
)
title <- system(cmd, intern = TRUE)
print(title)
if(length(attr(title,"status"))!= 0){
next
}
clean_title = str_split(title, '>|<')[[1]][3]
list_results[[s]] = data.frame(study_id =s, title = clean_title)
}
